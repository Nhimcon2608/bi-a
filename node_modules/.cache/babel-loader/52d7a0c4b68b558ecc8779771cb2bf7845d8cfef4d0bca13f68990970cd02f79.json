{"ast":null,"code":"// Performance optimization utilities\n\n// Debounce function for scroll events\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Throttle function for frequent events\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function () {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Optimized IntersectionObserver for animations\nexport const createOptimizedObserver = (callback, options = {}) => {\n  const defaultOptions = {\n    threshold: 0.1,\n    rootMargin: '50px 0px -50px 0px',\n    ...options\n  };\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        callback(entry);\n        // Unobserve after triggering to improve performance\n        observer.unobserve(entry.target);\n      }\n    });\n  }, defaultOptions);\n  return observer;\n};\n\n// Preload images for better performance\nexport const preloadImage = src => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = src;\n  });\n};\n\n// Lazy load images\nexport const lazyLoadImages = () => {\n  const images = document.querySelectorAll('img[data-src]');\n  const imageObserver = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const img = entry.target;\n        img.src = img.dataset.src;\n        img.classList.remove('lazy');\n        imageObserver.unobserve(img);\n      }\n    });\n  });\n  images.forEach(img => imageObserver.observe(img));\n};\n\n// Optimize scroll performance\nexport const optimizeScroll = () => {\n  let ticking = false;\n  const updateScrollPosition = () => {\n    // Your scroll logic here\n    ticking = false;\n  };\n  const requestTick = () => {\n    if (!ticking) {\n      requestAnimationFrame(updateScrollPosition);\n      ticking = true;\n    }\n  };\n  window.addEventListener('scroll', requestTick, {\n    passive: true\n  });\n};\n\n// Check if user prefers reduced motion\nexport const prefersReducedMotion = () => {\n  return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n};\n\n// Add hardware acceleration to element\nexport const addHardwareAcceleration = element => {\n  if (element) {\n    element.style.transform = 'translateZ(0)';\n    element.style.backfaceVisibility = 'hidden';\n    element.style.perspective = '1000px';\n  }\n};\n\n// Remove hardware acceleration\nexport const removeHardwareAcceleration = element => {\n  if (element) {\n    element.style.transform = '';\n    element.style.backfaceVisibility = '';\n    element.style.perspective = '';\n  }\n};\n\n// Optimize animations based on device capabilities\nexport const getOptimizedAnimationDuration = () => {\n  // Check device performance indicators\n  const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n  const isSlowConnection = connection && (connection.effectiveType === 'slow-2g' || connection.effectiveType === '2g');\n  const isLowEndDevice = navigator.hardwareConcurrency && navigator.hardwareConcurrency <= 2;\n  if (prefersReducedMotion() || isSlowConnection || isLowEndDevice) {\n    return 0.1; // Very fast animations\n  }\n  return 0.3; // Normal animation duration\n};\n\n// Batch DOM operations\nexport const batchDOMOperations = operations => {\n  requestAnimationFrame(() => {\n    operations.forEach(operation => operation());\n  });\n};\n\n// Memory cleanup utility\nexport const cleanupEventListeners = (element, events) => {\n  events.forEach(({\n    event,\n    handler\n  }) => {\n    element.removeEventListener(event, handler);\n  });\n};\n\n// Performance monitoring\nexport const measurePerformance = (name, fn) => {\n  const start = performance.now();\n  const result = fn();\n  const end = performance.now();\n  console.log(`${name} took ${end - start} milliseconds`);\n  return result;\n};\n\n// Optimize CSS animations\nexport const optimizeAnimations = () => {\n  const animatedElements = document.querySelectorAll('[class*=\"animate\"], [class*=\"transition\"]');\n  animatedElements.forEach(element => {\n    // Add will-change for better performance\n    element.style.willChange = 'transform, opacity';\n\n    // Remove will-change after animation\n    element.addEventListener('animationend', () => {\n      element.style.willChange = 'auto';\n    }, {\n      once: true\n    });\n    element.addEventListener('transitionend', () => {\n      element.style.willChange = 'auto';\n    }, {\n      once: true\n    });\n  });\n};\n\n// Initialize performance optimizations\nexport const initPerformanceOptimizations = () => {\n  // Optimize animations\n  optimizeAnimations();\n\n  // Lazy load images\n  lazyLoadImages();\n\n  // Optimize scroll\n  optimizeScroll();\n\n  // Add passive event listeners where possible\n  const passiveEvents = ['scroll', 'wheel', 'touchstart', 'touchmove'];\n  passiveEvents.forEach(event => {\n    document.addEventListener(event, () => {}, {\n      passive: true\n    });\n  });\n};\n\n// Export default object with all utilities\nconst performanceUtils = {\n  debounce,\n  throttle,\n  createOptimizedObserver,\n  preloadImage,\n  lazyLoadImages,\n  optimizeScroll,\n  prefersReducedMotion,\n  addHardwareAcceleration,\n  removeHardwareAcceleration,\n  getOptimizedAnimationDuration,\n  batchDOMOperations,\n  cleanupEventListeners,\n  measurePerformance,\n  optimizeAnimations,\n  initPerformanceOptimizations\n};\nexport default performanceUtils;","map":{"version":3,"names":["debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","throttle","limit","inThrottle","arguments","context","apply","createOptimizedObserver","callback","options","defaultOptions","threshold","rootMargin","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","unobserve","target","preloadImage","src","Promise","resolve","reject","img","Image","onload","onerror","lazyLoadImages","images","document","querySelectorAll","imageObserver","dataset","classList","remove","observe","optimizeScroll","ticking","updateScrollPosition","requestTick","requestAnimationFrame","window","addEventListener","passive","prefersReducedMotion","matchMedia","matches","addHardwareAcceleration","element","style","transform","backfaceVisibility","perspective","removeHardwareAcceleration","getOptimizedAnimationDuration","connection","navigator","mozConnection","webkitConnection","isSlowConnection","effectiveType","isLowEndDevice","hardwareConcurrency","batchDOMOperations","operations","operation","cleanupEventListeners","events","event","handler","removeEventListener","measurePerformance","name","fn","start","performance","now","result","end","console","log","optimizeAnimations","animatedElements","willChange","once","initPerformanceOptimizations","passiveEvents","performanceUtils"],"sources":["/Users/nhimcon/Downloads/bi-a/src/utils/performance.js"],"sourcesContent":["// Performance optimization utilities\n\n// Debounce function for scroll events\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Throttle function for frequent events\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function() {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Optimized IntersectionObserver for animations\nexport const createOptimizedObserver = (callback, options = {}) => {\n  const defaultOptions = {\n    threshold: 0.1,\n    rootMargin: '50px 0px -50px 0px',\n    ...options\n  };\n\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        callback(entry);\n        // Unobserve after triggering to improve performance\n        observer.unobserve(entry.target);\n      }\n    });\n  }, defaultOptions);\n\n  return observer;\n};\n\n// Preload images for better performance\nexport const preloadImage = (src) => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = src;\n  });\n};\n\n// Lazy load images\nexport const lazyLoadImages = () => {\n  const images = document.querySelectorAll('img[data-src]');\n  const imageObserver = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const img = entry.target;\n        img.src = img.dataset.src;\n        img.classList.remove('lazy');\n        imageObserver.unobserve(img);\n      }\n    });\n  });\n\n  images.forEach(img => imageObserver.observe(img));\n};\n\n// Optimize scroll performance\nexport const optimizeScroll = () => {\n  let ticking = false;\n\n  const updateScrollPosition = () => {\n    // Your scroll logic here\n    ticking = false;\n  };\n\n  const requestTick = () => {\n    if (!ticking) {\n      requestAnimationFrame(updateScrollPosition);\n      ticking = true;\n    }\n  };\n\n  window.addEventListener('scroll', requestTick, { passive: true });\n};\n\n// Check if user prefers reduced motion\nexport const prefersReducedMotion = () => {\n  return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n};\n\n// Add hardware acceleration to element\nexport const addHardwareAcceleration = (element) => {\n  if (element) {\n    element.style.transform = 'translateZ(0)';\n    element.style.backfaceVisibility = 'hidden';\n    element.style.perspective = '1000px';\n  }\n};\n\n// Remove hardware acceleration\nexport const removeHardwareAcceleration = (element) => {\n  if (element) {\n    element.style.transform = '';\n    element.style.backfaceVisibility = '';\n    element.style.perspective = '';\n  }\n};\n\n// Optimize animations based on device capabilities\nexport const getOptimizedAnimationDuration = () => {\n  // Check device performance indicators\n  const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n  const isSlowConnection = connection && (connection.effectiveType === 'slow-2g' || connection.effectiveType === '2g');\n  const isLowEndDevice = navigator.hardwareConcurrency && navigator.hardwareConcurrency <= 2;\n  \n  if (prefersReducedMotion() || isSlowConnection || isLowEndDevice) {\n    return 0.1; // Very fast animations\n  }\n  \n  return 0.3; // Normal animation duration\n};\n\n// Batch DOM operations\nexport const batchDOMOperations = (operations) => {\n  requestAnimationFrame(() => {\n    operations.forEach(operation => operation());\n  });\n};\n\n// Memory cleanup utility\nexport const cleanupEventListeners = (element, events) => {\n  events.forEach(({ event, handler }) => {\n    element.removeEventListener(event, handler);\n  });\n};\n\n// Performance monitoring\nexport const measurePerformance = (name, fn) => {\n  const start = performance.now();\n  const result = fn();\n  const end = performance.now();\n  console.log(`${name} took ${end - start} milliseconds`);\n  return result;\n};\n\n// Optimize CSS animations\nexport const optimizeAnimations = () => {\n  const animatedElements = document.querySelectorAll('[class*=\"animate\"], [class*=\"transition\"]');\n  \n  animatedElements.forEach(element => {\n    // Add will-change for better performance\n    element.style.willChange = 'transform, opacity';\n    \n    // Remove will-change after animation\n    element.addEventListener('animationend', () => {\n      element.style.willChange = 'auto';\n    }, { once: true });\n    \n    element.addEventListener('transitionend', () => {\n      element.style.willChange = 'auto';\n    }, { once: true });\n  });\n};\n\n// Initialize performance optimizations\nexport const initPerformanceOptimizations = () => {\n  // Optimize animations\n  optimizeAnimations();\n  \n  // Lazy load images\n  lazyLoadImages();\n  \n  // Optimize scroll\n  optimizeScroll();\n  \n  // Add passive event listeners where possible\n  const passiveEvents = ['scroll', 'wheel', 'touchstart', 'touchmove'];\n  passiveEvents.forEach(event => {\n    document.addEventListener(event, () => {}, { passive: true });\n  });\n};\n\n// Export default object with all utilities\nconst performanceUtils = {\n  debounce,\n  throttle,\n  createOptimizedObserver,\n  preloadImage,\n  lazyLoadImages,\n  optimizeScroll,\n  prefersReducedMotion,\n  addHardwareAcceleration,\n  removeHardwareAcceleration,\n  getOptimizedAnimationDuration,\n  batchDOMOperations,\n  cleanupEventListeners,\n  measurePerformance,\n  optimizeAnimations,\n  initPerformanceOptimizations\n};\n\nexport default performanceUtils;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}